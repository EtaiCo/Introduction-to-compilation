Terminals unused in grammar

    ELIF
    LENGTH


State 66 conflicts: 1 shift/reduce
State 82 conflicts: 17 reduce/reduce
State 109 conflicts: 1 shift/reduce
State 135 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: units

    2 units: units unit
    3      | ε

    4 unit: func_hdr block
    5     | proc_hdr block

    6 func_hdr: DEF IDENT LPAREN params RPAREN COLON RETURNS ret_type

    7 proc_hdr: DEF IDENT LPAREN params RPAREN

    8 ret_type: BOOL
    9         | CHAR
   10         | INT
   11         | REAL
   12         | STRING
   13         | INTPTR
   14         | CHARPTR
   15         | REALPTR

   16 params: param_list
   17       | ε

   18 param_list: param_list SEMICOLON param_list
   19           | PAR INT_LIT type_spec COLON IDENT

   20 block: VARIABLE decls KW_BEGIN opt_stmts END
   21      | KW_BEGIN opt_stmts END

   22 opt_stmts: stmts
   23          | ε

   24 decls: decls decl
   25      | decl

   26 decl: type_spec COLON decl_ids SEMICOLON

   27 type_spec: BOOL
   28          | CHAR
   29          | INT
   30          | REAL
   31          | STRING
   32          | INTPTR
   33          | CHARPTR
   34          | REALPTR

   35 decl_ids: decl_ids COMMA decl_ids
   36         | IDENT

   37 stmts: stmts stmt
   38      | stmt

   39 stmt: assign SEMICOLON
   40     | call_stmt SEMICOLON
   41     | IF expr COLON block opt_else
   42     | WHILE expr COLON block
   43     | DO COLON block WHILE COLON expr SEMICOLON
   44     | FOR LPAREN assign SEMICOLON expr SEMICOLON assign RPAREN COLON block
   45     | RETURN expr SEMICOLON
   46     | RETURN literal SEMICOLON
   47     | block

   48 opt_else: ELSE COLON block
   49         | ε

   50 assign: lhs ASSIGN expr

   51 lhs: IDENT
   52    | IDENT LBRACKET expr RBRACKET
   53    | MULTI IDENT

   54 call_stmt: CALL IDENT LPAREN arg_list RPAREN

   55 arg_list: arg_list COMMA expr
   56         | expr
   57         | ε

   58 expr: expr OR expr
   59     | expr AND expr
   60     | expr EQL expr
   61     | expr NOTEQL expr
   62     | expr GREATER expr
   63     | expr GREATEREQL expr
   64     | expr LESS expr
   65     | expr LESSEQL expr
   66     | expr PLUS expr
   67     | expr MINUS expr
   68     | expr MULTI expr
   69     | expr DIV expr
   70     | unary

   71 unary: NOT unary
   72      | ADDRESS lhs
   73      | MULTI unary
   74      | primary

   75 primary: LPAREN expr RPAREN
   76        | lhs
   77        | literal
   78        | NULLL

   79 literal: BOOL_LIT
   80        | INT_LIT
   81        | HEX_LIT
   82        | REAL_LIT
   83        | CHAR_LIT
   84        | STRING_LTL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BOOL (258) 8 27
    CHAR (259) 9 28
    INT (260) 10 29
    REAL (261) 11 30
    STRING (262) 12 31
    INTPTR (263) 13 32
    CHARPTR (264) 14 33
    REALPTR (265) 15 34
    IF (266) 41
    ELIF (267)
    ELSE (268) 48
    WHILE (269) 42 43
    FOR (270) 44
    DO (271) 43
    VARIABLE (272) 20
    PAR (273) 19
    RETURN (274) 45 46
    RETURNS (275) 6
    NULLL (276) 78
    KW_BEGIN (277) 20 21
    END (278) 20 21
    DEF (279) 6 7
    CALL (280) 54
    AND (281) 59
    OR (282) 58
    NOT (283) 71
    BOOL_LIT <str> (284) 79
    HEX_LIT <str> (285) 81
    INT_LIT <str> (286) 19 80
    REAL_LIT <str> (287) 82
    CHAR_LIT <str> (288) 83
    STRING_LTL <str> (289) 84
    IDENT <str> (290) 6 7 19 36 51 52 53 54
    EQL (291) 60
    NOTEQL (292) 61
    GREATEREQL (293) 63
    LESSEQL (294) 65
    GREATER (295) 62
    LESS (296) 64
    ASSIGN (297) 50
    PLUS (298) 66
    MINUS (299) 67
    MULTI (300) 53 68 73
    DIV (301) 69
    ADDRESS (302) 72
    LENGTH (303)
    LPAREN (304) 6 7 44 54 75
    RPAREN (305) 6 7 44 54 75
    LBRACKET (306) 52
    RBRACKET (307) 52
    SEMICOLON (308) 18 26 39 40 43 44 45 46
    COLON (309) 6 19 26 41 42 43 44 48
    COMMA (310) 35 55


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    program <n> (57)
        on left: 1
        on right: 0
    units <n> (58)
        on left: 2 3
        on right: 1 2
    unit <n> (59)
        on left: 4 5
        on right: 2
    func_hdr <n> (60)
        on left: 6
        on right: 4
    proc_hdr <n> (61)
        on left: 7
        on right: 5
    ret_type <n> (62)
        on left: 8 9 10 11 12 13 14 15
        on right: 6
    params <n> (63)
        on left: 16 17
        on right: 6 7
    param_list <n> (64)
        on left: 18 19
        on right: 16 18
    block <n> (65)
        on left: 20 21
        on right: 4 5 41 42 43 44 47 48
    opt_stmts <n> (66)
        on left: 22 23
        on right: 20 21
    decls <n> (67)
        on left: 24 25
        on right: 20 24
    decl <n> (68)
        on left: 26
        on right: 24 25
    type_spec <n> (69)
        on left: 27 28 29 30 31 32 33 34
        on right: 19 26
    decl_ids <n> (70)
        on left: 35 36
        on right: 26 35
    stmts <n> (71)
        on left: 37 38
        on right: 22 37
    stmt <n> (72)
        on left: 39 40 41 42 43 44 45 46 47
        on right: 37 38
    opt_else <n> (73)
        on left: 48 49
        on right: 41
    assign <n> (74)
        on left: 50
        on right: 39 44
    lhs <n> (75)
        on left: 51 52 53
        on right: 50 72 76
    call_stmt <n> (76)
        on left: 54
        on right: 40
    arg_list <n> (77)
        on left: 55 56 57
        on right: 54 55
    expr <n> (78)
        on left: 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 41 42 43 44 45 50 52 55 56 58 59 60 61 62 63 64 65 66 67 68 69 75
    unary <n> (79)
        on left: 71 72 73 74
        on right: 70 71 73
    primary <n> (80)
        on left: 75 76 77 78
        on right: 74
    literal <n> (81)
        on left: 79 80 81 82 83 84
        on right: 46 77


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (units)

    program  go to state 1
    units    go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: units •
    2 units: units • unit

    DEF  shift, and go to state 4

    $default  reduce using rule 1 (program)

    unit      go to state 5
    func_hdr  go to state 6
    proc_hdr  go to state 7


State 3

    0 $accept: program $end •

    $default  accept


State 4

    6 func_hdr: DEF • IDENT LPAREN params RPAREN COLON RETURNS ret_type
    7 proc_hdr: DEF • IDENT LPAREN params RPAREN

    IDENT  shift, and go to state 8


State 5

    2 units: units unit •

    $default  reduce using rule 2 (units)


State 6

    4 unit: func_hdr • block

    VARIABLE  shift, and go to state 9
    KW_BEGIN  shift, and go to state 10

    block  go to state 11


State 7

    5 unit: proc_hdr • block

    VARIABLE  shift, and go to state 9
    KW_BEGIN  shift, and go to state 10

    block  go to state 12


State 8

    6 func_hdr: DEF IDENT • LPAREN params RPAREN COLON RETURNS ret_type
    7 proc_hdr: DEF IDENT • LPAREN params RPAREN

    LPAREN  shift, and go to state 13


State 9

   20 block: VARIABLE • decls KW_BEGIN opt_stmts END

    BOOL     shift, and go to state 14
    CHAR     shift, and go to state 15
    INT      shift, and go to state 16
    REAL     shift, and go to state 17
    STRING   shift, and go to state 18
    INTPTR   shift, and go to state 19
    CHARPTR  shift, and go to state 20
    REALPTR  shift, and go to state 21

    decls      go to state 22
    decl       go to state 23
    type_spec  go to state 24


State 10

   21 block: KW_BEGIN • opt_stmts END

    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    FOR       shift, and go to state 27
    DO        shift, and go to state 28
    VARIABLE  shift, and go to state 9
    RETURN    shift, and go to state 29
    KW_BEGIN  shift, and go to state 10
    CALL      shift, and go to state 30
    IDENT     shift, and go to state 31
    MULTI     shift, and go to state 32

    $default  reduce using rule 23 (opt_stmts)

    block      go to state 33
    opt_stmts  go to state 34
    stmts      go to state 35
    stmt       go to state 36
    assign     go to state 37
    lhs        go to state 38
    call_stmt  go to state 39


State 11

    4 unit: func_hdr block •

    $default  reduce using rule 4 (unit)


State 12

    5 unit: proc_hdr block •

    $default  reduce using rule 5 (unit)


State 13

    6 func_hdr: DEF IDENT LPAREN • params RPAREN COLON RETURNS ret_type
    7 proc_hdr: DEF IDENT LPAREN • params RPAREN

    PAR  shift, and go to state 40

    $default  reduce using rule 17 (params)

    params      go to state 41
    param_list  go to state 42


State 14

   27 type_spec: BOOL •

    $default  reduce using rule 27 (type_spec)


State 15

   28 type_spec: CHAR •

    $default  reduce using rule 28 (type_spec)


State 16

   29 type_spec: INT •

    $default  reduce using rule 29 (type_spec)


State 17

   30 type_spec: REAL •

    $default  reduce using rule 30 (type_spec)


State 18

   31 type_spec: STRING •

    $default  reduce using rule 31 (type_spec)


State 19

   32 type_spec: INTPTR •

    $default  reduce using rule 32 (type_spec)


State 20

   33 type_spec: CHARPTR •

    $default  reduce using rule 33 (type_spec)


State 21

   34 type_spec: REALPTR •

    $default  reduce using rule 34 (type_spec)


State 22

   20 block: VARIABLE decls • KW_BEGIN opt_stmts END
   24 decls: decls • decl

    BOOL      shift, and go to state 14
    CHAR      shift, and go to state 15
    INT       shift, and go to state 16
    REAL      shift, and go to state 17
    STRING    shift, and go to state 18
    INTPTR    shift, and go to state 19
    CHARPTR   shift, and go to state 20
    REALPTR   shift, and go to state 21
    KW_BEGIN  shift, and go to state 43

    decl       go to state 44
    type_spec  go to state 24


State 23

   25 decls: decl •

    $default  reduce using rule 25 (decls)


State 24

   26 decl: type_spec • COLON decl_ids SEMICOLON

    COLON  shift, and go to state 45


State 25

   41 stmt: IF • expr COLON block opt_else

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 58
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 26

   42 stmt: WHILE • expr COLON block

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 62
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 27

   44 stmt: FOR • LPAREN assign SEMICOLON expr SEMICOLON assign RPAREN COLON block

    LPAREN  shift, and go to state 63


State 28

   43 stmt: DO • COLON block WHILE COLON expr SEMICOLON

    COLON  shift, and go to state 64


State 29

   45 stmt: RETURN • expr SEMICOLON
   46     | RETURN • literal SEMICOLON

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 65
    unary    go to state 59
    primary  go to state 60
    literal  go to state 66


State 30

   54 call_stmt: CALL • IDENT LPAREN arg_list RPAREN

    IDENT  shift, and go to state 67


State 31

   51 lhs: IDENT •
   52    | IDENT • LBRACKET expr RBRACKET

    LBRACKET  shift, and go to state 68

    $default  reduce using rule 51 (lhs)


State 32

   53 lhs: MULTI • IDENT

    IDENT  shift, and go to state 69


State 33

   47 stmt: block •

    $default  reduce using rule 47 (stmt)


State 34

   21 block: KW_BEGIN opt_stmts • END

    END  shift, and go to state 70


State 35

   22 opt_stmts: stmts •
   37 stmts: stmts • stmt

    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    FOR       shift, and go to state 27
    DO        shift, and go to state 28
    VARIABLE  shift, and go to state 9
    RETURN    shift, and go to state 29
    KW_BEGIN  shift, and go to state 10
    CALL      shift, and go to state 30
    IDENT     shift, and go to state 31
    MULTI     shift, and go to state 32

    $default  reduce using rule 22 (opt_stmts)

    block      go to state 33
    stmt       go to state 71
    assign     go to state 37
    lhs        go to state 38
    call_stmt  go to state 39


State 36

   38 stmts: stmt •

    $default  reduce using rule 38 (stmts)


State 37

   39 stmt: assign • SEMICOLON

    SEMICOLON  shift, and go to state 72


State 38

   50 assign: lhs • ASSIGN expr

    ASSIGN  shift, and go to state 73


State 39

   40 stmt: call_stmt • SEMICOLON

    SEMICOLON  shift, and go to state 74


State 40

   19 param_list: PAR • INT_LIT type_spec COLON IDENT

    INT_LIT  shift, and go to state 75


State 41

    6 func_hdr: DEF IDENT LPAREN params • RPAREN COLON RETURNS ret_type
    7 proc_hdr: DEF IDENT LPAREN params • RPAREN

    RPAREN  shift, and go to state 76


State 42

   16 params: param_list •
   18 param_list: param_list • SEMICOLON param_list

    SEMICOLON  shift, and go to state 77

    $default  reduce using rule 16 (params)


State 43

   20 block: VARIABLE decls KW_BEGIN • opt_stmts END

    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    FOR       shift, and go to state 27
    DO        shift, and go to state 28
    VARIABLE  shift, and go to state 9
    RETURN    shift, and go to state 29
    KW_BEGIN  shift, and go to state 10
    CALL      shift, and go to state 30
    IDENT     shift, and go to state 31
    MULTI     shift, and go to state 32

    $default  reduce using rule 23 (opt_stmts)

    block      go to state 33
    opt_stmts  go to state 78
    stmts      go to state 35
    stmt       go to state 36
    assign     go to state 37
    lhs        go to state 38
    call_stmt  go to state 39


State 44

   24 decls: decls decl •

    $default  reduce using rule 24 (decls)


State 45

   26 decl: type_spec COLON • decl_ids SEMICOLON

    IDENT  shift, and go to state 79

    decl_ids  go to state 80


State 46

   78 primary: NULLL •

    $default  reduce using rule 78 (primary)


State 47

   71 unary: NOT • unary

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    unary    go to state 81
    primary  go to state 60
    literal  go to state 61


State 48

   79 literal: BOOL_LIT •

    $default  reduce using rule 79 (literal)


State 49

   81 literal: HEX_LIT •

    $default  reduce using rule 81 (literal)


State 50

   80 literal: INT_LIT •

    $default  reduce using rule 80 (literal)


State 51

   82 literal: REAL_LIT •

    $default  reduce using rule 82 (literal)


State 52

   83 literal: CHAR_LIT •

    $default  reduce using rule 83 (literal)


State 53

   84 literal: STRING_LTL •

    $default  reduce using rule 84 (literal)


State 54

   53 lhs: MULTI • IDENT
   73 unary: MULTI • unary

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 82
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    unary    go to state 83
    primary  go to state 60
    literal  go to state 61


State 55

   72 unary: ADDRESS • lhs

    IDENT  shift, and go to state 31
    MULTI  shift, and go to state 32

    lhs  go to state 84


State 56

   75 primary: LPAREN • expr RPAREN

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 85
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 57

   76 primary: lhs •

    $default  reduce using rule 76 (primary)


State 58

   41 stmt: IF expr • COLON block opt_else
   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    AND         shift, and go to state 86
    OR          shift, and go to state 87
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97
    COLON       shift, and go to state 98


State 59

   70 expr: unary •

    $default  reduce using rule 70 (expr)


State 60

   74 unary: primary •

    $default  reduce using rule 74 (unary)


State 61

   77 primary: literal •

    $default  reduce using rule 77 (primary)


State 62

   42 stmt: WHILE expr • COLON block
   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    AND         shift, and go to state 86
    OR          shift, and go to state 87
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97
    COLON       shift, and go to state 99


State 63

   44 stmt: FOR LPAREN • assign SEMICOLON expr SEMICOLON assign RPAREN COLON block

    IDENT  shift, and go to state 31
    MULTI  shift, and go to state 32

    assign  go to state 100
    lhs     go to state 38


State 64

   43 stmt: DO COLON • block WHILE COLON expr SEMICOLON

    VARIABLE  shift, and go to state 9
    KW_BEGIN  shift, and go to state 10

    block  go to state 101


State 65

   45 stmt: RETURN expr • SEMICOLON
   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    AND         shift, and go to state 86
    OR          shift, and go to state 87
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97
    SEMICOLON   shift, and go to state 102


State 66

   46 stmt: RETURN literal • SEMICOLON
   77 primary: literal •

    SEMICOLON  shift, and go to state 103

    SEMICOLON  [reduce using rule 77 (primary)]
    $default   reduce using rule 77 (primary)


State 67

   54 call_stmt: CALL IDENT • LPAREN arg_list RPAREN

    LPAREN  shift, and go to state 104


State 68

   52 lhs: IDENT LBRACKET • expr RBRACKET

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 105
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 69

   53 lhs: MULTI IDENT •

    $default  reduce using rule 53 (lhs)


State 70

   21 block: KW_BEGIN opt_stmts END •

    $default  reduce using rule 21 (block)


State 71

   37 stmts: stmts stmt •

    $default  reduce using rule 37 (stmts)


State 72

   39 stmt: assign SEMICOLON •

    $default  reduce using rule 39 (stmt)


State 73

   50 assign: lhs ASSIGN • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 106
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 74

   40 stmt: call_stmt SEMICOLON •

    $default  reduce using rule 40 (stmt)


State 75

   19 param_list: PAR INT_LIT • type_spec COLON IDENT

    BOOL     shift, and go to state 14
    CHAR     shift, and go to state 15
    INT      shift, and go to state 16
    REAL     shift, and go to state 17
    STRING   shift, and go to state 18
    INTPTR   shift, and go to state 19
    CHARPTR  shift, and go to state 20
    REALPTR  shift, and go to state 21

    type_spec  go to state 107


State 76

    6 func_hdr: DEF IDENT LPAREN params RPAREN • COLON RETURNS ret_type
    7 proc_hdr: DEF IDENT LPAREN params RPAREN •

    COLON  shift, and go to state 108

    $default  reduce using rule 7 (proc_hdr)


State 77

   18 param_list: param_list SEMICOLON • param_list

    PAR  shift, and go to state 40

    param_list  go to state 109


State 78

   20 block: VARIABLE decls KW_BEGIN opt_stmts • END

    END  shift, and go to state 110


State 79

   36 decl_ids: IDENT •

    $default  reduce using rule 36 (decl_ids)


State 80

   26 decl: type_spec COLON decl_ids • SEMICOLON
   35 decl_ids: decl_ids • COMMA decl_ids

    SEMICOLON  shift, and go to state 111
    COMMA      shift, and go to state 112


State 81

   71 unary: NOT unary •

    $default  reduce using rule 71 (unary)


State 82

   51 lhs: IDENT •
   52    | IDENT • LBRACKET expr RBRACKET
   53    | MULTI IDENT •

    LBRACKET  shift, and go to state 68

    AND         reduce using rule 51 (lhs)
    AND         [reduce using rule 53 (lhs)]
    OR          reduce using rule 51 (lhs)
    OR          [reduce using rule 53 (lhs)]
    EQL         reduce using rule 51 (lhs)
    EQL         [reduce using rule 53 (lhs)]
    NOTEQL      reduce using rule 51 (lhs)
    NOTEQL      [reduce using rule 53 (lhs)]
    GREATEREQL  reduce using rule 51 (lhs)
    GREATEREQL  [reduce using rule 53 (lhs)]
    LESSEQL     reduce using rule 51 (lhs)
    LESSEQL     [reduce using rule 53 (lhs)]
    GREATER     reduce using rule 51 (lhs)
    GREATER     [reduce using rule 53 (lhs)]
    LESS        reduce using rule 51 (lhs)
    LESS        [reduce using rule 53 (lhs)]
    PLUS        reduce using rule 51 (lhs)
    PLUS        [reduce using rule 53 (lhs)]
    MINUS       reduce using rule 51 (lhs)
    MINUS       [reduce using rule 53 (lhs)]
    MULTI       reduce using rule 51 (lhs)
    MULTI       [reduce using rule 53 (lhs)]
    DIV         reduce using rule 51 (lhs)
    DIV         [reduce using rule 53 (lhs)]
    RPAREN      reduce using rule 51 (lhs)
    RPAREN      [reduce using rule 53 (lhs)]
    RBRACKET    reduce using rule 51 (lhs)
    RBRACKET    [reduce using rule 53 (lhs)]
    SEMICOLON   reduce using rule 51 (lhs)
    SEMICOLON   [reduce using rule 53 (lhs)]
    COLON       reduce using rule 51 (lhs)
    COLON       [reduce using rule 53 (lhs)]
    COMMA       reduce using rule 51 (lhs)
    COMMA       [reduce using rule 53 (lhs)]
    $default    reduce using rule 51 (lhs)


State 83

   73 unary: MULTI unary •

    $default  reduce using rule 73 (unary)


State 84

   72 unary: ADDRESS lhs •

    $default  reduce using rule 72 (unary)


State 85

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr
   75 primary: LPAREN expr • RPAREN

    AND         shift, and go to state 86
    OR          shift, and go to state 87
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97
    RPAREN      shift, and go to state 113


State 86

   59 expr: expr AND • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 114
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 87

   58 expr: expr OR • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 115
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 88

   60 expr: expr EQL • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 116
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 89

   61 expr: expr NOTEQL • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 117
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 90

   63 expr: expr GREATEREQL • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 118
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 91

   65 expr: expr LESSEQL • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 119
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 92

   62 expr: expr GREATER • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 120
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 93

   64 expr: expr LESS • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 121
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 94

   66 expr: expr PLUS • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 122
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 95

   67 expr: expr MINUS • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 123
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 96

   68 expr: expr MULTI • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 124
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 97

   69 expr: expr DIV • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 125
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 98

   41 stmt: IF expr COLON • block opt_else

    VARIABLE  shift, and go to state 9
    KW_BEGIN  shift, and go to state 10

    block  go to state 126


State 99

   42 stmt: WHILE expr COLON • block

    VARIABLE  shift, and go to state 9
    KW_BEGIN  shift, and go to state 10

    block  go to state 127


State 100

   44 stmt: FOR LPAREN assign • SEMICOLON expr SEMICOLON assign RPAREN COLON block

    SEMICOLON  shift, and go to state 128


State 101

   43 stmt: DO COLON block • WHILE COLON expr SEMICOLON

    WHILE  shift, and go to state 129


State 102

   45 stmt: RETURN expr SEMICOLON •

    $default  reduce using rule 45 (stmt)


State 103

   46 stmt: RETURN literal SEMICOLON •

    $default  reduce using rule 46 (stmt)


State 104

   54 call_stmt: CALL IDENT LPAREN • arg_list RPAREN

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    $default  reduce using rule 57 (arg_list)

    lhs       go to state 57
    arg_list  go to state 130
    expr      go to state 131
    unary     go to state 59
    primary   go to state 60
    literal   go to state 61


State 105

   52 lhs: IDENT LBRACKET expr • RBRACKET
   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    AND         shift, and go to state 86
    OR          shift, and go to state 87
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97
    RBRACKET    shift, and go to state 132


State 106

   50 assign: lhs ASSIGN expr •
   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    AND         shift, and go to state 86
    OR          shift, and go to state 87
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97

    $default  reduce using rule 50 (assign)


State 107

   19 param_list: PAR INT_LIT type_spec • COLON IDENT

    COLON  shift, and go to state 133


State 108

    6 func_hdr: DEF IDENT LPAREN params RPAREN COLON • RETURNS ret_type

    RETURNS  shift, and go to state 134


State 109

   18 param_list: param_list • SEMICOLON param_list
   18           | param_list SEMICOLON param_list •

    SEMICOLON  shift, and go to state 77

    SEMICOLON  [reduce using rule 18 (param_list)]
    $default   reduce using rule 18 (param_list)


State 110

   20 block: VARIABLE decls KW_BEGIN opt_stmts END •

    $default  reduce using rule 20 (block)


State 111

   26 decl: type_spec COLON decl_ids SEMICOLON •

    $default  reduce using rule 26 (decl)


State 112

   35 decl_ids: decl_ids COMMA • decl_ids

    IDENT  shift, and go to state 79

    decl_ids  go to state 135


State 113

   75 primary: LPAREN expr RPAREN •

    $default  reduce using rule 75 (primary)


State 114

   58 expr: expr • OR expr
   59     | expr • AND expr
   59     | expr AND expr •
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97

    $default  reduce using rule 59 (expr)


State 115

   58 expr: expr • OR expr
   58     | expr OR expr •
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    AND         shift, and go to state 86
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97

    $default  reduce using rule 58 (expr)


State 116

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   60     | expr EQL expr •
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULTI  shift, and go to state 96
    DIV    shift, and go to state 97

    $default  reduce using rule 60 (expr)


State 117

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   61     | expr NOTEQL expr •
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULTI  shift, and go to state 96
    DIV    shift, and go to state 97

    $default  reduce using rule 61 (expr)


State 118

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   63     | expr GREATEREQL expr •
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULTI  shift, and go to state 96
    DIV    shift, and go to state 97

    $default  reduce using rule 63 (expr)


State 119

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   65     | expr LESSEQL expr •
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULTI  shift, and go to state 96
    DIV    shift, and go to state 97

    $default  reduce using rule 65 (expr)


State 120

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   62     | expr GREATER expr •
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULTI  shift, and go to state 96
    DIV    shift, and go to state 97

    $default  reduce using rule 62 (expr)


State 121

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   64     | expr LESS expr •
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    PLUS   shift, and go to state 94
    MINUS  shift, and go to state 95
    MULTI  shift, and go to state 96
    DIV    shift, and go to state 97

    $default  reduce using rule 64 (expr)


State 122

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   66     | expr PLUS expr •
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    MULTI  shift, and go to state 96
    DIV    shift, and go to state 97

    $default  reduce using rule 66 (expr)


State 123

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   67     | expr MINUS expr •
   68     | expr • MULTI expr
   69     | expr • DIV expr

    MULTI  shift, and go to state 96
    DIV    shift, and go to state 97

    $default  reduce using rule 67 (expr)


State 124

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   68     | expr MULTI expr •
   69     | expr • DIV expr

    $default  reduce using rule 68 (expr)


State 125

   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr
   69     | expr DIV expr •

    $default  reduce using rule 69 (expr)


State 126

   41 stmt: IF expr COLON block • opt_else

    ELSE  shift, and go to state 136

    $default  reduce using rule 49 (opt_else)

    opt_else  go to state 137


State 127

   42 stmt: WHILE expr COLON block •

    $default  reduce using rule 42 (stmt)


State 128

   44 stmt: FOR LPAREN assign SEMICOLON • expr SEMICOLON assign RPAREN COLON block

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 138
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 129

   43 stmt: DO COLON block WHILE • COLON expr SEMICOLON

    COLON  shift, and go to state 139


State 130

   54 call_stmt: CALL IDENT LPAREN arg_list • RPAREN
   55 arg_list: arg_list • COMMA expr

    RPAREN  shift, and go to state 140
    COMMA   shift, and go to state 141


State 131

   56 arg_list: expr •
   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    AND         shift, and go to state 86
    OR          shift, and go to state 87
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97

    $default  reduce using rule 56 (arg_list)


State 132

   52 lhs: IDENT LBRACKET expr RBRACKET •

    $default  reduce using rule 52 (lhs)


State 133

   19 param_list: PAR INT_LIT type_spec COLON • IDENT

    IDENT  shift, and go to state 142


State 134

    6 func_hdr: DEF IDENT LPAREN params RPAREN COLON RETURNS • ret_type

    BOOL     shift, and go to state 143
    CHAR     shift, and go to state 144
    INT      shift, and go to state 145
    REAL     shift, and go to state 146
    STRING   shift, and go to state 147
    INTPTR   shift, and go to state 148
    CHARPTR  shift, and go to state 149
    REALPTR  shift, and go to state 150

    ret_type  go to state 151


State 135

   35 decl_ids: decl_ids • COMMA decl_ids
   35         | decl_ids COMMA decl_ids •

    COMMA  shift, and go to state 112

    COMMA     [reduce using rule 35 (decl_ids)]
    $default  reduce using rule 35 (decl_ids)


State 136

   48 opt_else: ELSE • COLON block

    COLON  shift, and go to state 152


State 137

   41 stmt: IF expr COLON block opt_else •

    $default  reduce using rule 41 (stmt)


State 138

   44 stmt: FOR LPAREN assign SEMICOLON expr • SEMICOLON assign RPAREN COLON block
   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    AND         shift, and go to state 86
    OR          shift, and go to state 87
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97
    SEMICOLON   shift, and go to state 153


State 139

   43 stmt: DO COLON block WHILE COLON • expr SEMICOLON

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 154
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 140

   54 call_stmt: CALL IDENT LPAREN arg_list RPAREN •

    $default  reduce using rule 54 (call_stmt)


State 141

   55 arg_list: arg_list COMMA • expr

    NULLL       shift, and go to state 46
    NOT         shift, and go to state 47
    BOOL_LIT    shift, and go to state 48
    HEX_LIT     shift, and go to state 49
    INT_LIT     shift, and go to state 50
    REAL_LIT    shift, and go to state 51
    CHAR_LIT    shift, and go to state 52
    STRING_LTL  shift, and go to state 53
    IDENT       shift, and go to state 31
    MULTI       shift, and go to state 54
    ADDRESS     shift, and go to state 55
    LPAREN      shift, and go to state 56

    lhs      go to state 57
    expr     go to state 155
    unary    go to state 59
    primary  go to state 60
    literal  go to state 61


State 142

   19 param_list: PAR INT_LIT type_spec COLON IDENT •

    $default  reduce using rule 19 (param_list)


State 143

    8 ret_type: BOOL •

    $default  reduce using rule 8 (ret_type)


State 144

    9 ret_type: CHAR •

    $default  reduce using rule 9 (ret_type)


State 145

   10 ret_type: INT •

    $default  reduce using rule 10 (ret_type)


State 146

   11 ret_type: REAL •

    $default  reduce using rule 11 (ret_type)


State 147

   12 ret_type: STRING •

    $default  reduce using rule 12 (ret_type)


State 148

   13 ret_type: INTPTR •

    $default  reduce using rule 13 (ret_type)


State 149

   14 ret_type: CHARPTR •

    $default  reduce using rule 14 (ret_type)


State 150

   15 ret_type: REALPTR •

    $default  reduce using rule 15 (ret_type)


State 151

    6 func_hdr: DEF IDENT LPAREN params RPAREN COLON RETURNS ret_type •

    $default  reduce using rule 6 (func_hdr)


State 152

   48 opt_else: ELSE COLON • block

    VARIABLE  shift, and go to state 9
    KW_BEGIN  shift, and go to state 10

    block  go to state 156


State 153

   44 stmt: FOR LPAREN assign SEMICOLON expr SEMICOLON • assign RPAREN COLON block

    IDENT  shift, and go to state 31
    MULTI  shift, and go to state 32

    assign  go to state 157
    lhs     go to state 38


State 154

   43 stmt: DO COLON block WHILE COLON expr • SEMICOLON
   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    AND         shift, and go to state 86
    OR          shift, and go to state 87
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97
    SEMICOLON   shift, and go to state 158


State 155

   55 arg_list: arg_list COMMA expr •
   58 expr: expr • OR expr
   59     | expr • AND expr
   60     | expr • EQL expr
   61     | expr • NOTEQL expr
   62     | expr • GREATER expr
   63     | expr • GREATEREQL expr
   64     | expr • LESS expr
   65     | expr • LESSEQL expr
   66     | expr • PLUS expr
   67     | expr • MINUS expr
   68     | expr • MULTI expr
   69     | expr • DIV expr

    AND         shift, and go to state 86
    OR          shift, and go to state 87
    EQL         shift, and go to state 88
    NOTEQL      shift, and go to state 89
    GREATEREQL  shift, and go to state 90
    LESSEQL     shift, and go to state 91
    GREATER     shift, and go to state 92
    LESS        shift, and go to state 93
    PLUS        shift, and go to state 94
    MINUS       shift, and go to state 95
    MULTI       shift, and go to state 96
    DIV         shift, and go to state 97

    $default  reduce using rule 55 (arg_list)


State 156

   48 opt_else: ELSE COLON block •

    $default  reduce using rule 48 (opt_else)


State 157

   44 stmt: FOR LPAREN assign SEMICOLON expr SEMICOLON assign • RPAREN COLON block

    RPAREN  shift, and go to state 159


State 158

   43 stmt: DO COLON block WHILE COLON expr SEMICOLON •

    $default  reduce using rule 43 (stmt)


State 159

   44 stmt: FOR LPAREN assign SEMICOLON expr SEMICOLON assign RPAREN • COLON block

    COLON  shift, and go to state 160


State 160

   44 stmt: FOR LPAREN assign SEMICOLON expr SEMICOLON assign RPAREN COLON • block

    VARIABLE  shift, and go to state 9
    KW_BEGIN  shift, and go to state 10

    block  go to state 161


State 161

   44 stmt: FOR LPAREN assign SEMICOLON expr SEMICOLON assign RPAREN COLON block •

    $default  reduce using rule 44 (stmt)
